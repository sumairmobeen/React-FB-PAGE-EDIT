{"version":3,"sources":["index.js"],"names":["Post","useState","data","updateval","fluid","className","onSubmit","event","preventDefault","newData","fname","document","getElementById","value","lastName","profileimg","img1","posttext","previous","concat","Row","Group","as","Col","Label","Control","type","placeholder","id","required","controlId","console","log","map","eachItem","i","src","alt","style","width","height","borderRadius","ReactDOM","render","querySelector"],"mappings":"uLASA,SAASA,IAAQ,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACDC,EADC,KAwBd,OACE,gCACE,cAAC,IAAD,CAAWC,MAAM,KAAjB,SACE,qBAAKC,UAAU,gCAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,eAAC,IAAD,CAAMC,SA3BhB,SAAaC,GACXA,EAAMC,iBAEN,IAKIC,EAAU,CACZC,MANUC,SAASC,eAAe,SAASC,MAO3CC,SANaH,SAASC,eAAe,YAAYC,MAOjDE,WANeJ,SAASC,eAAe,cAAcC,MAOrDG,KANSL,SAASC,eAAe,QAAQC,MAOzCI,SANaN,SAASC,eAAe,YAAYC,OASnDV,GAAU,SAACe,GACT,OAAOA,EAASC,OAAO,CAACV,QAUlB,UACE,eAAC,IAAKW,IAAN,WACE,eAAC,IAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAAC,IAAKC,MAAN,yBACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,OAAOC,YAAY,aAAaC,GAAG,QAAQC,UAAQ,OAGxE,eAAC,IAAKR,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAAC,IAAKC,MAAN,wBACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,OAAOC,YAAY,aAAaC,GAAG,WAAWC,UAAQ,OAG3E,eAAC,IAAKR,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAAC,IAAKC,MAAN,4BACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,MAAMC,YAAY,uBAAuBC,GAAG,aAAaC,UAAQ,UAIxF,eAAC,IAAKR,MAAN,CAAYS,UAAU,mBAAtB,UACE,cAAC,IAAKN,MAAN,yBACA,cAAC,IAAKC,QAAN,CAAcE,YAAY,kBAAkBC,GAAG,OAAOC,UAAQ,OAGhE,eAAC,IAAKR,MAAN,CAAYS,UAAU,mBAAtB,UACE,cAAC,IAAKN,MAAN,wBACA,cAAC,IAAKC,QAAN,CAAcE,YAAY,aAAaC,GAAG,WAAWC,UAAQ,OAG/D,mDAcPE,QAAQC,IAAI,SAAU9B,GAStBA,EAAK+B,KAAI,SAACC,EAAUC,GACnB,OACE,qBAAKP,GAAG,YAAR,SACE,cAAC,IAAD,CAAWxB,MAAM,KAAjB,SACE,qBAAKC,UAAU,gCAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAK+B,IAAKF,EAASnB,WAAYsB,IAAI,GAAGC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,GAAIC,aAAa,YAErF,sBAAKpC,UAAU,YAAf,UACE,mBAAGA,UAAU,OAAb,SAAqB6B,EAASxB,QAC9B,mBAAGL,UAAU,OAAb,SAAqB6B,EAASpB,iBAGlC,qBAAKT,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAU,YAAb,SAA0B6B,EAASjB,eAGvC,qBAAKZ,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAK+B,IAAKF,EAASlB,KACjBqB,IAAI,eAAeC,MAAO,CAAEC,MAAO,6BAiB3DG,IAASC,OAAO,cAAC3C,EAAD,IAAUW,SAASiC,cAAc,W","file":"static/js/main.1fb4c4f1.chunk.js","sourcesContent":["\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Col, Form, Container } from \"react-bootstrap\";\n\n\nfunction Post() {\n  const [data, updateval] = useState([]);\n  function add(event) {\n    event.preventDefault();\n\n    let fname = document.getElementById('fname').value;\n    let lastName = document.getElementById('lastName').value;\n    let profileimg = document.getElementById('profileimg').value;\n    let img1 = document.getElementById('img1').value;\n    let posttext = document.getElementById('posttext').value;\n    let newData = {\n      fname: fname,\n      lastName: lastName,\n      profileimg: profileimg,\n      img1: img1,\n      posttext: posttext,\n    }\n\n    updateval((previous) => {\n      return previous.concat([newData]);\n    });\n\n\n  }\n  return (\n    <div>\n      <Container fluid=\"md\" >\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col-md-6 form\">\n            <Form onSubmit={add} >\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>First Name</Form.Label>\n                  <Form.Control type=\"name\" placeholder=\"Enter Name\" id=\"fname\" required />\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Last Name</Form.Label>\n                  <Form.Control type=\"name\" placeholder=\"Enter Name\" id=\"lastName\" required />\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Profile Image</Form.Label>\n                  <Form.Control type=\"url\" placeholder=\"Select Profile Image\" id=\"profileimg\" required />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group controlId=\"formGridAddress1\">\n                <Form.Label>Post Image</Form.Label>\n                <Form.Control placeholder=\"Enter Image URL\" id=\"img1\" required />\n              </Form.Group>\n\n              <Form.Group controlId=\"formGridAddress2\">\n                <Form.Label>Post Text</Form.Label>\n                <Form.Control placeholder=\"Write Post\" id=\"posttext\" required />\n              </Form.Group>\n\n              <button>Post</button>\n\n            \n            </Form>\n          </div>\n        </div>\n      </Container>\n\n\n\n\n\n\n\n      {console.log(\"data :\", data)}\n\n\n\n\n\n\n\n\n      {data.map((eachItem, i) => {\n        return (\n          <div id=\"main-card\">\n            <Container fluid=\"md\">\n              <div className=\"row justify-content-md-center\">\n                <div className=\"col-md-6 card\">\n                  <div className=\"row\">\n                    <div className=\"col-md-2\">\n                      <img src={eachItem.profileimg} alt=\"\" style={{ width: 40, height: 40, borderRadius:\"100%\" }} />\n                    </div>\n                    <div className=\"col-md-10\">\n                      <p className=\"name\">{eachItem.fname}</p>\n                      <p className=\"name\">{eachItem.lastName}</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <p className=\"mt-2 mb-2\">{eachItem.posttext}</p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <img src={eachItem.img1}\n                        alt=\"{Post Image}\" style={{ width: \"100%\" }} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Container>\n          </div>\n        )\n      })}\n    </div>\n  )\n\n\n\n\n}\n\nReactDOM.render(<Post />, document.querySelector('#root'));\n\n\n\n\n"],"sourceRoot":""}